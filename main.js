(()=>{var e={930:()=>{function e(){document.querySelector(".news-container").insertAdjacentHTML("afterbegin",'\n      <div class="modal">\n        <p class="modal-text">\n          Не удалось загрузить данные Проверьте подключение и обновите страницу\n        </p>\n      </div>\n    ')}(async()=>{try{navigator.serviceWorker&&(await navigator.serviceWorker.register("/service-worker.js"),console.log("sw registered"))}catch(e){console.log(e)}})(),fetch("http://localhost:7070/api/test").then((e=>e.json())).then((e=>function(e){const t=document.querySelector(".news-list"),n=document.createElement("div");n.classList.add("news-list"),e.forEach((e=>{const{timestamp:t,newsMessage:s}=e,r=new Date(t).toLocaleDateString("ru-RU",{hour:"numeric",minute:"numeric",day:"numeric",month:"numeric",year:"numeric"});n.insertAdjacentHTML("beforeend",`\n      <div class="news-list-item">\n          <div class="news-list-item-head-formatted">${r}</div>\n          <div class="news-list-item-body">\n            <div class="news-list-item-box"></div>\n            <div class="news-list-item-two-lines">${s}</div>\n          </div>\n        </div>\n      `)})),t.replaceWith(n)}(e))).catch((()=>{setTimeout(e,3e3)}))}},t={};function n(s){var r=t[s];if(void 0!==r)return r.exports;var i=t[s]={exports:{}};return e[s](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var s in t)n.o(t,s)&&!n.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";n(930)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoic0JBYUEsU0FBU0EsSUFDV0MsU0FBU0MsY0FBYyxtQkFFL0JDLG1CQUNSLGFBQ0EsaUxBUUosQ0ExQkEsV0FDRSxJQUNNQyxVQUFVQyxzQkFDTkQsVUFBVUMsY0FBY0MsU0FBUyxzQkFDdkNDLFFBQVFDLElBQUksaUJBRWhCLENBQUUsTUFBT0MsR0FDUEYsUUFBUUMsSUFBSUMsRUFDZCxDQUNELEVBVEQsR0E2REFDLE1BQU0sa0NBQ0hDLE1BQU1DLEdBQU1BLEVBQUVDLFNBQ2RGLE1BQU1DLEdBbkNULFNBQW9CRSxHQUNsQixNQUFNQyxFQUFXZCxTQUFTQyxjQUFjLGNBQ2xDYyxFQUFXZixTQUFTZ0IsY0FBYyxPQUN4Q0QsRUFBU0UsVUFBVUMsSUFBSSxhQUN2QkwsRUFBSU0sU0FBU0MsSUFDWCxNQUFNLFVBQUVDLEVBQVMsWUFBRUMsR0FBZ0JGLEVBVTdCRyxFQVRPLElBQUlDLEtBQUtILEdBU0tJLG1CQUFtQixRQVI5QixDQUNkQyxLQUFNLFVBQ05DLE9BQVEsVUFDUkMsSUFBSyxVQUNMQyxNQUFPLFVBQ1BDLEtBQU0sWUFJUmYsRUFBU2IsbUJBQ1AsWUFDQSw4RkFFaURxQiwrSkFHSEQsb0RBSS9DLElBR0hSLEVBQVNpQixZQUFZaEIsRUFDdkIsQ0FJZWlCLENBQVdyQixLQUN2QnNCLE9BQU0sS0FDTEMsV0FBV25DLEVBQVcsSUFBSyxHLEdDaEUzQm9DLEVBQTJCLENBQUMsRUFHaEMsU0FBU0MsRUFBb0JDLEdBRTVCLElBQUlDLEVBQWVILEVBQXlCRSxHQUM1QyxRQUFxQkUsSUFBakJELEVBQ0gsT0FBT0EsRUFBYUUsUUFHckIsSUFBSUMsRUFBU04sRUFBeUJFLEdBQVksQ0FHakRHLFFBQVMsQ0FBQyxHQU9YLE9BSEFFLEVBQW9CTCxHQUFVSSxFQUFRQSxFQUFPRCxRQUFTSixHQUcvQ0ssRUFBT0QsT0FDZixDQ3JCQUosRUFBb0JPLEVBQUtGLElBQ3hCLElBQUlHLEVBQVNILEdBQVVBLEVBQU9JLFdBQzdCLElBQU9KLEVBQWlCLFFBQ3hCLElBQU0sRUFFUCxPQURBTCxFQUFvQlUsRUFBRUYsRUFBUSxDQUFFRyxFQUFHSCxJQUM1QkEsQ0FBTSxFQ0xkUixFQUFvQlUsRUFBSSxDQUFDTixFQUFTUSxLQUNqQyxJQUFJLElBQUlDLEtBQU9ELEVBQ1haLEVBQW9CYyxFQUFFRixFQUFZQyxLQUFTYixFQUFvQmMsRUFBRVYsRUFBU1MsSUFDNUVFLE9BQU9DLGVBQWVaLEVBQVNTLEVBQUssQ0FBRUksWUFBWSxFQUFNQyxJQUFLTixFQUFXQyxJQUUxRSxFQ05EYixFQUFvQmMsRUFBSSxDQUFDSyxFQUFLQyxJQUFVTCxPQUFPTSxVQUFVQyxlQUFlQyxLQUFLSixFQUFLQyxHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV0by10ZW1wbGF0ZS8uL3NyYy9qcy9hcHAuanMiLCJ3ZWJwYWNrOi8vbmV0by10ZW1wbGF0ZS93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9uZXRvLXRlbXBsYXRlL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL25ldG8tdGVtcGxhdGUvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL25ldG8tdGVtcGxhdGUvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCJdLCJzb3VyY2VzQ29udGVudCI6WyIoYXN5bmMgKCkgPT4ge1xuICB0cnkge1xuICAgIGlmIChuYXZpZ2F0b3Iuc2VydmljZVdvcmtlcikge1xuICAgICAgYXdhaXQgbmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIucmVnaXN0ZXIoJy9zZXJ2aWNlLXdvcmtlci5qcycpO1xuICAgICAgY29uc29sZS5sb2coJ3N3IHJlZ2lzdGVyZWQnKTtcbiAgICB9XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBjb25zb2xlLmxvZyhlKTtcbiAgfVxufSkoKTtcblxuLy8gY29uc3QgdXJsID0gXCJodHRwczovL3NlcnZpY2Utd29ya2VyLWJ1Z2d5LXNlcnZpY2UtYmFja2VuZC5vbnJlbmRlci5jb21cIjtcblxuZnVuY3Rpb24gbm9OZXR3b3JrKCkge1xuICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubmV3cy1jb250YWluZXInKTtcblxuICBjb250YWluZXIuaW5zZXJ0QWRqYWNlbnRIVE1MKFxuICAgICdhZnRlcmJlZ2luJyxcbiAgICBgXG4gICAgICA8ZGl2IGNsYXNzPVwibW9kYWxcIj5cbiAgICAgICAgPHAgY2xhc3M9XCJtb2RhbC10ZXh0XCI+XG4gICAgICAgICAg0J3QtSDRg9C00LDQu9C+0YHRjCDQt9Cw0LPRgNGD0LfQuNGC0Ywg0LTQsNC90L3Ri9C1INCf0YDQvtCy0LXRgNGM0YLQtSDQv9C+0LTQutC70Y7Rh9C10L3QuNC1INC4INC+0LHQvdC+0LLQuNGC0LUg0YHRgtGA0LDQvdC40YbRg1xuICAgICAgICA8L3A+XG4gICAgICA8L2Rpdj5cbiAgICBgLFxuICApO1xufVxuXG5mdW5jdGlvbiBpbnNlcnROZXdzKGFycikge1xuICBjb25zdCBuZXdzTGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5uZXdzLWxpc3QnKTtcbiAgY29uc3QgZmFrZUxpc3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgZmFrZUxpc3QuY2xhc3NMaXN0LmFkZCgnbmV3cy1saXN0Jyk7XG4gIGFyci5mb3JFYWNoKChuZXdzSXRlbSkgPT4ge1xuICAgIGNvbnN0IHsgdGltZXN0YW1wLCBuZXdzTWVzc2FnZSB9ID0gbmV3c0l0ZW07XG4gICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKHRpbWVzdGFtcCk7XG4gICAgY29uc3Qgb3B0aW9ucyA9IHtcbiAgICAgIGhvdXI6ICdudW1lcmljJyxcbiAgICAgIG1pbnV0ZTogJ251bWVyaWMnLFxuICAgICAgZGF5OiAnbnVtZXJpYycsXG4gICAgICBtb250aDogJ251bWVyaWMnLFxuICAgICAgeWVhcjogJ251bWVyaWMnLFxuICAgIH07XG5cbiAgICBjb25zdCBmb3JtYXR0ZWREYXRlID0gZGF0ZS50b0xvY2FsZURhdGVTdHJpbmcoJ3J1LVJVJywgb3B0aW9ucyk7XG4gICAgZmFrZUxpc3QuaW5zZXJ0QWRqYWNlbnRIVE1MKFxuICAgICAgJ2JlZm9yZWVuZCcsXG4gICAgICBgXG4gICAgICA8ZGl2IGNsYXNzPVwibmV3cy1saXN0LWl0ZW1cIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwibmV3cy1saXN0LWl0ZW0taGVhZC1mb3JtYXR0ZWRcIj4ke2Zvcm1hdHRlZERhdGV9PC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cIm5ld3MtbGlzdC1pdGVtLWJvZHlcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJuZXdzLWxpc3QtaXRlbS1ib3hcIj48L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJuZXdzLWxpc3QtaXRlbS10d28tbGluZXNcIj4ke25ld3NNZXNzYWdlfTwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIGAsXG4gICAgKTtcbiAgfSk7XG5cbiAgbmV3c0xpc3QucmVwbGFjZVdpdGgoZmFrZUxpc3QpO1xufVxuXG5mZXRjaCgnaHR0cDovL2xvY2FsaG9zdDo3MDcwL2FwaS90ZXN0JylcbiAgLnRoZW4oKHIpID0+IHIuanNvbigpKVxuICAudGhlbigocikgPT4gaW5zZXJ0TmV3cyhyKSlcbiAgLmNhdGNoKCgpID0+IHtcbiAgICBzZXRUaW1lb3V0KG5vTmV0d29yaywgMzAwMCk7XG4gIH0pO1xuIiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSJdLCJuYW1lcyI6WyJub05ldHdvcmsiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJpbnNlcnRBZGphY2VudEhUTUwiLCJuYXZpZ2F0b3IiLCJzZXJ2aWNlV29ya2VyIiwicmVnaXN0ZXIiLCJjb25zb2xlIiwibG9nIiwiZSIsImZldGNoIiwidGhlbiIsInIiLCJqc29uIiwiYXJyIiwibmV3c0xpc3QiLCJmYWtlTGlzdCIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc0xpc3QiLCJhZGQiLCJmb3JFYWNoIiwibmV3c0l0ZW0iLCJ0aW1lc3RhbXAiLCJuZXdzTWVzc2FnZSIsImZvcm1hdHRlZERhdGUiLCJEYXRlIiwidG9Mb2NhbGVEYXRlU3RyaW5nIiwiaG91ciIsIm1pbnV0ZSIsImRheSIsIm1vbnRoIiwieWVhciIsInJlcGxhY2VXaXRoIiwiaW5zZXJ0TmV3cyIsImNhdGNoIiwic2V0VGltZW91dCIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsInVuZGVmaW5lZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0Iiwib2JqIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCJdLCJzb3VyY2VSb290IjoiIn0=